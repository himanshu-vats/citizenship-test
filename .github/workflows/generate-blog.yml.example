# AUTO BLOG GENERATION WORKFLOW
#
# HOW TO USE:
# 1. Rename this file to: generate-blog.yml (remove .example)
# 2. Add OpenAI API key to GitHub Secrets: OPENAI_API_KEY
# 3. Create file: blog-topics.txt with one topic per line
# 4. This runs automatically when you push new topics
#
# COST: ~$0.02 per article with GPT-4o-mini

name: Generate Blog Article

on:
  # Run when blog-topics.txt is updated
  push:
    paths:
      - 'blog-topics.txt'

  # Or run manually from Actions tab
  workflow_dispatch:
    inputs:
      topic:
        description: 'Article topic'
        required: true
        type: string

jobs:
  generate-article:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Generate article with OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          # Install OpenAI CLI or use API directly
          npm install -g openai

          # Read topic from input or file
          if [ "${{ github.event.inputs.topic }}" != "" ]; then
            TOPIC="${{ github.event.inputs.topic }}"
          else
            TOPIC=$(head -n 1 blog-topics.txt)
          fi

          # Create prompt
          PROMPT="You are a blog writer for CivicsPass. Generate a markdown blog article with YAML frontmatter about: $TOPIC"

          # Call OpenAI API
          ARTICLE=$(curl https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [{\"role\": \"user\", \"content\": \"$PROMPT\"}],
              \"temperature\": 0.7
            }" | jq -r '.choices[0].message.content')

          # Create filename from topic
          FILENAME=$(echo "$TOPIC" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed 's/[^a-z0-9-]//g').md

          # Save article
          echo "$ARTICLE" > "content/blog/$FILENAME"

          # Remove topic from list
          tail -n +2 blog-topics.txt > blog-topics.tmp && mv blog-topics.tmp blog-topics.txt

      - name: Commit new article
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add content/blog/*.md
          git add blog-topics.txt
          git commit -m "Add auto-generated blog article" || exit 0
          git push

# SETUP INSTRUCTIONS:
#
# 1. Get OpenAI API Key:
#    - Go to https://platform.openai.com/api-keys
#    - Create new secret key
#    - Copy it
#
# 2. Add to GitHub Secrets:
#    - Go to your repo → Settings → Secrets and variables → Actions
#    - Click "New repository secret"
#    - Name: OPENAI_API_KEY
#    - Value: [paste your key]
#    - Click "Add secret"
#
# 3. Create blog-topics.txt in repo root:
#    - One topic per line
#    - Example:
#      How long does N-400 processing take in 2025?
#      What documents do I need for my citizenship interview?
#      Top 10 most commonly missed civics questions
#
# 4. Activate workflow:
#    - Rename this file to generate-blog.yml (remove .example)
#    - Push to GitHub
#
# 5. Use it:
#    - Add topics to blog-topics.txt and push
#    - OR go to Actions tab → Generate Blog Article → Run workflow
#    - Article auto-generates and publishes!
